<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		
	</fx:Declarations>
	
	<fx:Metadata>
		[Event(name="OnChangeImage", type="editor.event.NotifyEvent")]
	</fx:Metadata>
	
	
	<fx:Script>
		<![CDATA[
			import corecom.control.UIControl;
			import corecom.control.event.EditModeEvent;
			import corecom.control.style.IStyle;
			
			import editor.event.NotifyEvent;
			import editor.model.asset.Asset;
			import editor.model.asset.AssetBitmap;
			import editor.utils.Globals;
			
			import mx.events.FlexEvent;
			
			[Bindable]
			protected var BindEnable:Boolean = false;
			
			[Bindable]
			protected var CurrentControl:UIControl = null;
			public function set Control(Value:UIControl):void
			{
				if(CurrentControl)
				{
					CurrentControl.removeEventListener(EditModeEvent.FRAME_RESIZED,ControlUpdate);
					CurrentControl.removeEventListener(EditModeEvent.CONTROL_MOVED,ControlUpdate);
				}
				CurrentControl = Value;
				CurrentControl.addEventListener(EditModeEvent.FRAME_RESIZED,ControlUpdate);
				CurrentControl.addEventListener(EditModeEvent.CONTROL_MOVED,ControlUpdate);
				Initialized();
			}
			
			protected function ControlUpdate(event:EditModeEvent):void
			{
				
			}
			
			//[Bindable]
			public function get Control():UIControl
			{
				return CurrentControl;
			}
			
			public function Reset():void
			{
				
			}
			/**
			 * 初始化数据
			 **/
			protected function Initialized():void
			{
				
			}
			
			protected function BrowserImage(event:MouseEvent):void
			{
				var Notify:NotifyEvent = new NotifyEvent(NotifyEvent.CHANGEIMAGE);
				Notify.Params.push(OnImageSelectedNotify);
				dispatchEvent(Notify);
			}
			
			protected function OnImageSelectedNotify(LibraryId:String,AssetId:String):void
			{
				var AssetItem:Asset = Globals.FindAssetById(LibraryId,AssetId);
				if(null != AssetItem && AssetItem is AssetBitmap)
				{
					ImageSelected(AssetBitmap(AssetItem).Image,AssetId);
				}
			}
			
			protected function ImageSelected(Image:Bitmap,ImageId:String):void
			{
				
			}
		]]>
	</fx:Script>
	
	
</s:VGroup>
